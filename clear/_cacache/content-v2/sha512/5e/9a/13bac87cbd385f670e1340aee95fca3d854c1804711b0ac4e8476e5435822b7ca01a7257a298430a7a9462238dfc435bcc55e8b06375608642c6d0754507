{"_id":"proggy","_rev":"15-7432952277e35cdcdbbbeca65fe7019e","name":"proggy","dist-tags":{"latest":"3.0.0"},"versions":{"0.0.1":{"name":"proggy","version":"0.0.1","author":{"url":"https://izs.me","name":"Isaac Z. Schlueter","email":"i@izs.me"},"license":"ISC","_id":"proggy@0.0.1","maintainers":[{"name":"isaacs","email":"i@izs.me"}],"homepage":"https://github.com/npm/proggy#readme","bugs":{"url":"https://github.com/npm/proggy/issues"},"tap":{"coverage-map":"map.js"},"dist":{"shasum":"d612f9ab069ed4dab1193ce80e90e2e18c2730b0","tarball":"https://registry.npmjs.org/proggy/-/proggy-0.0.1.tgz","fileCount":6,"integrity":"sha512-bkJy5ZupUVPivQJacr7v5AFk9+s98EcGMNNbIrVknPjoVdJqx684Bnx+/nkwWqAvuAtiK6b76HL8eEBCrmVFTA==","signatures":[{"sig":"MEYCIQClMRnMDTnPOIBUS7xMCN/fSxM5TVUsh8+5piOYwYAXQQIhAMZZsPbfR9g9MaVD2w/9KIl4N4YXmavtxX4rBkM9THVs","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":12632,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhQ86HCRA9TVsSAnZWagAAJ2EP+wVQssj24AxpOTyP9GOW\nKCo196duPjo6Abf5taI3VYqYHzmySv0XWHr7Wcn/ec8rFXi0mG7p3Bns8w/Z\ntqE2eIViCcnVzexAiVXeUjruBOibif9KaMXkx9xdkw048zQATEgVTunWfJPf\ntUhScjhxaqzSYYYvawhIQMwP5Ie6Q07vWKfRdWTAe0OzZ/1dxBnFTlrlEH0L\nzKnw5YBhcBapAnQDt03X3j8SHohIZNekK58W7UCjSrjF0P9SiOajSh/jRH1R\nTfl9SL45BhFjPrvhlO8d9bVYp1SRQpMNXx9uCMupfibbWfPJGxIaHF5WMOZi\nyXi1EBSygYPRrzwZTOS31dPxid8ZEDy4o97c844a5oeQHouDUwY0zr4dj8V6\niwKtWem/6mxrq1RHUb7PKQ8On/prsTd1JjNNLa3mO4nJoHte4AaLt4ZpgaGc\nGxqKFJJC73yKupWwrSPQWJr9XZxqCUFHo7T/aQ044fJ0dXF+0BA79HAavoVx\nh/T5gHgNIHrq6YtmzJ1aE4p/FbTUj0LFLSU7SHlgsyqqUVBh8QD4Xwoaa9kd\nOntWGHWZG8O8D3ddSBjsbbLnIEr6Lkdwz23z7x6MLwT7pggM0oU9TNcnBs+U\nzqBtVd+UFb9bO5UV3nS/GMIMnZ2+rbXhifJ1vPA4n70mYMfXzm6F3MUIWDAV\nbmip\r\n=2ZLQ\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","gitHead":"f0fab319570b712987c4e7b8b7dc9e2c795ffe23","scripts":{"snap":"tap","test":"tap","postsnap":"eslint lib test --fix","posttest":"eslint lib test","preversion":"npm test","postversion":"npm publish","prepublishOnly":"git push origin --follow-tags"},"_npmUser":{"name":"isaacs","email":"i@izs.me"},"repository":{"url":"git+https://github.com/npm/proggy.git","type":"git"},"_npmVersion":"7.23.0","description":"Progress bar updates at a distance","directories":{},"_nodeVersion":"16.5.0","_hasShrinkwrap":false,"devDependencies":{"tap":"^15.0.9","chalk":"^2.4.2","eslint":"^7.9.0","npmlog":"^4.1.2","cli-progress":"^3.9.0","eslint-plugin-node":"^11.1.0","eslint-plugin-import":"^2.22.0","eslint-plugin-promise":"^4.2.1","eslint-plugin-standard":"^4.0.1"},"_npmOperationalInternal":{"tmp":"tmp/proggy_0.0.1_1631833734979_0.8028325437868817","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"proggy","version":"1.0.0","author":{"name":"GitHub Inc."},"license":"ISC","_id":"proggy@1.0.0","maintainers":[{"name":"lukekarrys","email":"luke@lukekarrys.com"},{"name":"isaacs","email":"i@izs.me"}],"homepage":"https://github.com/npm/proggy#readme","bugs":{"url":"https://github.com/npm/proggy/issues"},"tap":{"coverage-map":"map.js"},"dist":{"shasum":"19dc37525e4dac1f3851e9728b6fabf02b11a15d","tarball":"https://registry.npmjs.org/proggy/-/proggy-1.0.0.tgz","fileCount":6,"integrity":"sha512-C3ozZQp6yTEbBzpLzLeIURZQyQT+ymx+wsKVw5PD4Zr6S0TNSWf8GPtMNyxAeFQOGVQbxZDty14/Vi9D8feaXA==","signatures":[{"sig":"MEUCIQCg/5KLa0/1h1NZy2KD/6K8TrSns8eWsdf6mQ1j8GY3bQIgeJselN1c4bCpKpS/+A6CqkuSujTVHF5NpsT+lbEdDdY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":12821,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiFoPgACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmo9hg//ZVLFQfdh0CD9bxbm928VGA7HQTpdpOrgs5y5ufRpFezp6spO\r\n6xmuFkS2BQXFWB2ABOLn+69R1OLuomIE8AMBuUlyVdNAZH1w4FRW63in9uei\r\nKgvPxs7SCUTfrHZVdqSFNVsoCNthyftgJ7eEaHr1lWSWMiXs6yY0mlLmTX+V\r\nfMqPyZobIwXgMTMrbP3t42FOJhRfne3R6kXK4gZYNn28V91K4nyNn2PVSfji\r\ndzMy52902odVpIGHSW/SxxVG0vJeJy+XRohVql82uM5ogyufc+BRDfxDHxaJ\r\ntBmm8VvoXoVn+p7NA0mwKumDiuRuWWJKef+4lBTSDdnoY0r3bTkTJO4mAQ4a\r\nJ/CK6RU1K/Rci1q8M7hoFJUGp08SrF/K64D0tZy8nbxUF+MljHQir6KqFYpO\r\n+PO8yYZqgoYKvy9l9APmhAtPmUoUnh5crxu9i8ItjBbkvKHb18N4MMeYImLB\r\n6iqgW21Y/+XmFZxIPD3bJRLcr0PLhdGFnMwFfOrlxfi1vFCOfiSulHA0vy1u\r\nct4roXVO/QGtQ/Y1PxnGSznFIXFAGO5B6QPUkJHgK/fX5PRtUEX/ZIqvVnbX\r\n6d8rDhDT579xvIzMDb8kA7dL4+YsPgZowJKYygCSPFFf4LpB9HybJQmTOcgQ\r\nxvMqeAfn7wwWjkk59jgWI1bITIIjLFV07ng=\r\n=OCpR\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","engines":{"node":"^12.13.0 || ^14.15.0 || >=16"},"gitHead":"2b5552c6b39b094f8686fb8cf219bc4fcccdd7be","scripts":{"lint":"eslint '**/*.js'","snap":"tap","test":"tap","lintfix":"npm run lint -- --fix","postlint":"npm-template-check","postsnap":"eslint lib test --fix","posttest":"npm run lint","preversion":"npm test","postversion":"npm publish","template-copy":"npm-template-copy --force","prepublishOnly":"git push origin --follow-tags"},"_npmUser":{"name":"lukekarrys","email":"luke@lukekarrys.com"},"repository":{"url":"git+https://github.com/npm/proggy.git","type":"git"},"_npmVersion":"8.5.1","description":"Progress bar updates at a distance","directories":{},"templateOSS":{"version":"2.7.1"},"_nodeVersion":"16.14.0","_hasShrinkwrap":false,"devDependencies":{"tap":"^15.1.6","chalk":"^4.1.2","npmlog":"^6.0.1","cli-progress":"^3.10.0","@npmcli/template-oss":"^2.7.1"},"_npmOperationalInternal":{"tmp":"tmp/proggy_1.0.0_1645642720201_0.8138541055740791","host":"s3://npm-registry-packages"}},"2.0.0":{"name":"proggy","version":"2.0.0","author":{"name":"GitHub Inc."},"license":"ISC","_id":"proggy@2.0.0","maintainers":[{"name":"lukekarrys","email":"luke@lukekarrys.com"},{"name":"isaacs","email":"i@izs.me"}],"homepage":"https://github.com/npm/proggy#readme","bugs":{"url":"https://github.com/npm/proggy/issues"},"tap":{"nyc-arg":["--exclude","tap-snapshots/**"],"coverage-map":"map.js"},"dist":{"shasum":"154bb0e41d3125b518ef6c79782455c2c47d94e1","tarball":"https://registry.npmjs.org/proggy/-/proggy-2.0.0.tgz","fileCount":6,"integrity":"sha512-69agxLtnI8xBs9gUGqEnK26UfiexpHy+KUpBQWabiytQjnn5wFY8rklAi7GRfABIuPNnQ/ik48+LGLkYYJcy4A==","signatures":[{"sig":"MEQCID+8z++H0qpxetDdivDptdjpwHQtH2PDbzfG0oNVgSxZAiBMYjrG3kr7iodqRnyE0QxIKWQ6lhaapDmkHGS2SgiZSw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":12977,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJjSPIuACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrqMA//Y9U4ZySYUGCn+1UES6zuAkPuuhck1KxRVsSl8by/u40hZOC4\r\nOfzPMHgsXmFuhalB94fol2Mj+ba35EvtLIOYmETh+cohPFtvqZlt0ZrP+abD\r\n2F2oxysV9Pn2eIsNQamoDiGK5Sn/B7cDFz0ZFB/I4SVPZgB4BgYUm7/LAB/7\r\n7Nfu8ltQCr3zxe8Ddg+bo9HILfu2CL4beEPv/Q2nZKvc5+bRkZkRqTMDca7P\r\nenvatVXvrebzzw1v/b5d9BTuzms9ger8XOA0j79h9JzmURiz4rD0t4TTLYnd\r\nRfejkmwXhpsJqUNImq0LuRetVp37MW/vPL9ooMYKSoIFO69GrJKkjJrIm/Uq\r\nIappkykju4ydHVxnSKelR86FJvbDy5eGTRgx8rm7/PoLxPOzmqXrlr+7gQJs\r\n/U9TqNgYEzoscd8V3rqdGJBh+SUfXZ3t6JroCE8n4/55a/kHNY2PCUIkf+Ci\r\nr27h0G1c08+P+zdPwIhxG8rVwx9P7v6wmqQoi2B6TXui/FFFnG46nDvJzWvG\r\nIH7PbkATBCyc0/xPQtQjFv+tw7lihBEpzxkENTGnvTWlDgw5PzsbWxfJ4p6v\r\niiss9wjTjgWiVxq6sU59sc8Rf2o2owvKYwprUDzeDkxnYcs3ER46HWauOG+y\r\n1GBzytjZyb0VZMGJjMbVxSDr+4ro9Ik8pAc=\r\n=Pw60\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","engines":{"node":"^14.17.0 || ^16.13.0 || >=18.0.0"},"gitHead":"4f06e3bba2ffd62b643b96eaa49a43c72b1db57b","scripts":{"lint":"eslint \"**/*.js\"","snap":"tap","test":"tap","lintfix":"npm run lint -- --fix","postlint":"template-oss-check","postsnap":"eslint lib test --fix","posttest":"npm run lint","template-oss-apply":"template-oss-apply --force"},"_npmUser":{"name":"lukekarrys","email":"luke@lukekarrys.com"},"repository":{"url":"git+https://github.com/npm/proggy.git","type":"git"},"_npmVersion":"8.19.2","description":"Progress bar updates at a distance","directories":{},"templateOSS":{"version":"4.5.1","//@npmcli/template-oss":"This file is partially managed by @npmcli/template-oss. Edits may be overwritten."},"_nodeVersion":"18.10.0","_hasShrinkwrap":false,"devDependencies":{"tap":"^16.0.1","chalk":"^4.1.2","npmlog":"^6.0.1","cli-progress":"^3.10.0","@npmcli/template-oss":"4.5.1","@npmcli/eslint-config":"^3.0.1"},"_npmOperationalInternal":{"tmp":"tmp/proggy_2.0.0_1665724974597_0.02894559380025319","host":"s3://npm-registry-packages"}},"3.0.0":{"name":"proggy","version":"3.0.0","author":{"name":"GitHub Inc."},"license":"ISC","_id":"proggy@3.0.0","maintainers":[{"name":"hashtagchris","email":"hashtagchris@github.com"},{"name":"reggi","email":"reggi@github.com"},{"name":"npm-cli-ops","email":"npm-cli+bot@github.com"},{"name":"saquibkhan","email":"saquibkhan@github.com"},{"name":"fritzy","email":"fritzy@github.com"},{"name":"gar","email":"gar+npm@danger.computer"}],"homepage":"https://github.com/npm/proggy#readme","bugs":{"url":"https://github.com/npm/proggy/issues"},"tap":{"nyc-arg":["--exclude","tap-snapshots/**"],"coverage-map":"map.js"},"dist":{"shasum":"874e91fed27fe00a511758e83216a6b65148bd6c","tarball":"https://registry.npmjs.org/proggy/-/proggy-3.0.0.tgz","fileCount":6,"integrity":"sha512-QE8RApCM3IaRRxVzxrjbgNMpQEX6Wu0p0KBeoSiSEw5/bsGwZHsshF4LCxH2jp/r6BU+bqA3LrMDEYNfJnpD8Q==","signatures":[{"sig":"MEUCIGP4t7PCYo3jkgk1zlNMkEdUVvoiVzGif6rU6KwJ3507AiEAz7ALNx/IjkSUnn81zL5255ElOU69nRFA8NHgkH1fjy8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/proggy@3.0.0","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":13047},"main":"lib/index.js","engines":{"node":"^18.17.0 || >=20.5.0"},"gitHead":"a2964136f42cc9a29a461fa08c460a9e4b981854","scripts":{"lint":"npm run eslint","snap":"tap","test":"tap","eslint":"eslint \"**/*.{js,cjs,ts,mjs,jsx,tsx}\"","lintfix":"npm run eslint -- --fix","postlint":"template-oss-check","postsnap":"eslint lib test --fix","posttest":"npm run lint","template-oss-apply":"template-oss-apply --force"},"_npmUser":{"name":"npm-cli-ops","email":"npm-cli+bot@github.com"},"repository":{"url":"git+https://github.com/npm/proggy.git","type":"git"},"_npmVersion":"10.8.3","description":"Progress bar updates at a distance","directories":{},"templateOSS":{"publish":true,"version":"4.23.3","//@npmcli/template-oss":"This file is partially managed by @npmcli/template-oss. Edits may be overwritten."},"_nodeVersion":"22.9.0","_hasShrinkwrap":false,"devDependencies":{"tap":"^16.0.1","chalk":"^4.1.2","npmlog":"^7.0.0","cli-progress":"^3.10.0","@npmcli/template-oss":"4.23.3","@npmcli/eslint-config":"^5.0.0"},"_npmOperationalInternal":{"tmp":"tmp/proggy_3.0.0_1727205596950_0.2202247649843938","host":"s3://npm-registry-packages"}}},"time":{"created":"2021-09-16T23:08:54.926Z","modified":"2025-05-14T20:03:35.544Z","0.0.1":"2021-09-16T23:08:55.153Z","1.0.0":"2022-02-23T18:58:40.337Z","2.0.0":"2022-10-14T05:22:54.752Z","3.0.0":"2024-09-24T19:19:57.153Z"},"bugs":{"url":"https://github.com/npm/proggy/issues"},"author":{"name":"GitHub Inc."},"license":"ISC","homepage":"https://github.com/npm/proggy#readme","repository":{"url":"git+https://github.com/npm/proggy.git","type":"git"},"description":"Progress bar updates at a distance","maintainers":[{"email":"gar+npm@danger.computer","name":"gar"},{"email":"saquibkhan@github.com","name":"saquibkhan"},{"email":"npm-cli+bot@github.com","name":"npm-cli-ops"},{"email":"reggi@github.com","name":"reggi"},{"email":"hashtagchris@github.com","name":"hashtagchris"},{"email":"owlstronaut@github.com","name":"owlstronaut"}],"readme":"# proggy\n\nProgress bar updates at a distance\n\nA decoupled progress bar connector component that lets you emit events on\nthe process object to provide progress updates from various parts of a\nprogram.\n\n## USAGE\n\nSomewhere in your program, you have a thing that is performing actions that\ntake a while.\n\nIn there, you will emit `progress` events on the global `process` object\nusing Proggy.\n\n```js\nconst proggy = require('proggy')\nconst doSomething = async (listOfItems) => {\n  // This name should be unique within your program.\n  // Proggy will do its best to make sure that you don't create the same\n  // tracker more than once by throwing if you give it a name it's already\n  // seen, but if there are multiple instances of Proggy, it won't be able\n  // to guarantee it.\n  const tracker = proggy.createTracker('doing something')\n  let i = 0\n  for (const item of listOfItems) {\n    tracker.update(i++, listOfItems.length)\n    const result = await doSomething(item)\n\n    // changing the length is allowed!  The progress bar will never go\n    // backwards, but it will slow down if the total increases.\n    if (result.more)\n      listOfItems.push(result.more)\n  }\n  // can either explicitly end, or let it implicitly end when the value\n  // is >= the total.\n  tracker.end()\n}\n```\n\nProggy is not a UI component.  It is a way to decouple the UI of a progress\nbar from the thing that is making the actual progress.\n\nIn another part of your program, where you are handling showing stuff to\nthe user, you can display this information using any of the wonderful\nprogress bar UI modules available on npm.\n\n```js\nconst proggy = require('proggy')\n\n// Create a client that can consume the events emitted elsewhere\nconst client = proggy.createClient()\n```\n\nIf you set the `normalize: true` flag, then the client will normalize how\nfar it thinks the progress should have gone, in order to prevent backwards\nmotion if the length increases along the way.  If using this, then the\n`total` value will always be set to 100, and the `increment` value will\nalways be some number smaller than 100.  Use the `actualValue` and\n`actualTotal` fields to identify how many things have actually been done.\n\nFor example, using\n[`cli-progress`](https://www.npmjs.com/package/cli-progress):\n\n```js\n// set up our display thingmajig\nconst cliProgress = require('cli-progress')\nconst multibar = new cliProgress.MultiBar({\n  clearOnComplete: true,\n  hideCursor: true,\n  // note that data.actualValue and data.actualTotal will reflect the real\n  // done/remaining values.  data.value will always be less than 100, and\n  // data.total will always be 100, so we never show reverse motion.\n  format: '[{bar}] {percentage}% | {name} {actualValue}/{actualTotal} {duration_formatted}',\n  barCompleteChar: '\\u2588',\n  barIncompleteChar: '\\u2591',\n}, cliProgress.Presets.shades_grey)\n\n// update it with events from the proggy client\nconst client = proggy.createClient({\n  // don't show reverse progress\n  // this is false by default\n  normalize: true,\n})\nconst bars = {}\n// new bar is created, tell multibar about it\nclient.on('bar', (key, data) => {\n  bars[key] = multibar.create(data.total)\n})\n// got some progress for a progress bar, tell multibar to show it\nclient.on('progress', (key, data) => {\n  bars[key].update(data.value, data)\n  bars[key].setTotal(data.total)\n})\n// a bar is done, tell multibar to stop updating it\nclient.on('barDone', (key, data) => {\n  bars[key].stop()\n})\n// all bars done, tell multibar to close entirely\nclient.on('done', () => {\n  multibar.stop()\n})\n```\n\n## API\n\n### `proggy.createTracker(name, [key], [total])`\n\nCreate a new `Tracker`.\n\n`key` will default to `name` if not set.  It must be unique.\n\n### `new proggy.Tracker(name, [key], [total])`\n\nThe Tracker class, for emitting progress information.\n\n`total` will default to `100` if not set, but will be updated whenever\nprogress is tracked.\n\n#### Fields\n\n* `name`, `key` - The name and identifer values set in the constructor\n* `done` - `true` if the tracker is completed.\n* `total` `value` - The most recent values updated.\n\n#### `tracker.update(value, total, [metadata])`\n\nUpdate the tracker and emit a `'progress'` event on the `process` object.\n\n#### `tracker.finish([metadata])`\n\nAlias for `tracker.update(tracker.total, tracker.total, metadata)`\n\n### `proggy.createClient(options)`\n\nCreate a new `Client`.\n\n### `new proggy.Client({ normalize = false, stopOnDone = false })`\n\nThe Client class, for consuming progress information.\n\nSet `normalize: true` in the options object to prevent backward motion and\nfix the `total` value at `100`.\n\nSet `stopOnDone: true` in the options object to tell the client to\nautomatically stop when it emits its `'done'` event.\n\n#### Fields\n\n* `normalize` - whether this Client is in normalizing mode\n* `size` - the number of active trackers this Client is aware of\n\n#### Events\n\n* `client.on('bar', (key, data) => {})` - Emitted when a new progress bar\n  is encountered.\n* `client.on('progress', (key, data) => {})` - Emitted when an update is\n  available for a given progress bar.\n* `client.on('barDone', (key, data) => {})` - Emitted when a progress bar\n  is completed.\n* `client.on('done', () => {})` - Emitted when all progress bars are\n  completed.\n\n#### `client.start()`\n\nBegin listening for `'progress'` events on the `process` object.\n\nCalled implicitly if `client.on('progress', fn)` is called.\n\n#### `client.stop()`\n\nStop listening for `'progress'` events on the `process` object.\n\nCalled implicitly when the `'done'` event is emitted, if\n`client.stopOnDone` is true.\n\n#### Progress Data\n\nAll client events receive data objects containing the following fields, in\naddition to whatever else was sent by the `tracker`.\n\n* `key` - The unique key for this progress bar.\n* `name` - The name for this progress bar.\n* `value` - The current value of the progress.  If `client.normalize` is\n  true, then this will always be a number less than `100`, and never reduce\n  from one update to the next.\n* `total` - The expected final value of the progress.  If\n  `client.normalize` is true, then this number will always be `100`.\n* `actualValue` - The value originally sent by the tracker.  If\n  `client.normalize` is not true, then this is always equal to `value`.\n* `actualTotal` - The total originally sent by the tracker.  If\n  `client.normalize` is not true, then this is always equal to `total`.\n* `done` - True if the tracker explicitly sent `done: true` in the data, or\n  if `value` is greater than or equal to `total`.\n* Whatever other fields were set on the `metadata` sent by the tracker.\n","readmeFilename":"README.md"}