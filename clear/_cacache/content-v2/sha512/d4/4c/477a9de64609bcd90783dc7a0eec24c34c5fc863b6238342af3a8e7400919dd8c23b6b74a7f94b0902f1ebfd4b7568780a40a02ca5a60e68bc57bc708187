{"_id":"@jsonjoy.com/json-pack","_rev":"10-8915c95f2a367cc6df8932353e748f5e","name":"@jsonjoy.com/json-pack","dist-tags":{"latest":"1.2.0"},"versions":{"0.0.1":{"name":"@jsonjoy.com/json-pack","version":"0.0.1","author":"","license":"ISC","_id":"@jsonjoy.com/json-pack@0.0.1","maintainers":[{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"dist":{"shasum":"8a8e49d355b0ba219e57136f4d4431bd22c8b5a5","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-0.0.1.tgz","fileCount":1,"integrity":"sha512-KHIaZQz78x0u8mSRyGSh+608XmJQEeR4jUfYQ4Qq/zyG6TnL/AIG+9G8BKViZ2E54qI1czNQa3YeXQImY28AgA==","signatures":[{"sig":"MEYCIQDt8DCLvwCpSZNDp+crj5BvmkJwsvd+EtWstXLAaEZH4wIhAPq7m9wD3KkYPl5AO3X2XUaJ1pVwx8KrJdYurVqGiIpl","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":218},"main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"_npmVersion":"10.2.4","directories":{},"_nodeVersion":"20.11.1","_hasShrinkwrap":false,"_npmOperationalInternal":{"tmp":"tmp/json-pack_0.0.1_1712315695701_0.14335552625716996","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"@jsonjoy.com/json-pack","version":"1.0.0","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"_id":"@jsonjoy.com/json-pack@1.0.0","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"a4adebee777376cf6756a6c960c97817cefc26bf","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.0.0.tgz","fileCount":524,"integrity":"sha512-G5M5BnknsaMuEsXWvp+HPvxeTti5Muir4VIUvpzvWky6ZHKhqgCAAENNgCn6xKZQ6kmhwk3uf/S631cVCnfewA==","signatures":[{"sig":"MEUCIQDprno4pIsI2my+VmwhctiaSaXYb3nCK0FnDI+m97MSowIgYfIkTYvsUi3lic6eDplkD5DDWBTikvUSZ0L+nPm0zS0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":750457},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"5f60a1669e50728efe4dd28274b7b4b1146e57d6","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.1.0","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.8.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.0.0_1712668752485_0.2527086255397386","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"@jsonjoy.com/json-pack","version":"1.0.1","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"_id":"@jsonjoy.com/json-pack@1.0.1","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"ab324209c99d1b0ccf7a247ce81a45658ec31283","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.0.1.tgz","fileCount":485,"integrity":"sha512-a8nau3pCEmoyCR3O3ih5XVxhFhs1+PPphNAbTN1P66TOvPItWQ9NyGE78Rc8YgoyWBPwwyGW1C60sS8/Ji3L8g==","signatures":[{"sig":"MEYCIQDiH1RxJfxoKtv3dK1GuLHbpgFepqCM4Ilo89aWGzqATgIhALOw5XsoKlKhXySyp3sbI+yDWKXgbyN+RWrrw3fQOvPP","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715684},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"5393bbe6688d6aabd769392c4093ea1e68d990d1","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.1.0","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.8.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.0.1_1712672804390_0.7753333573724355","host":"s3://npm-registry-packages"}},"1.0.2":{"name":"@jsonjoy.com/json-pack","version":"1.0.2","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"_id":"@jsonjoy.com/json-pack@1.0.2","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"d7c8c284db828b29eebb9082134251a8216ec5cc","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.0.2.tgz","fileCount":233,"integrity":"sha512-4KMApTgb1Hvjz9Ue7unziJ1xNy3k6d2erp0hz1iXryXsf6LEM3KwN6YrfbqT0vqkUO8Tu+CSnvMia9cWX6YGVw==","signatures":[{"sig":"MEYCIQCIqrj5Ut05ZwqD8jI3L6SYIcaokxKNjj3aGN4tZodNMAIhAMnXweMEkfAQ/TZyEomJ1YKIc2sYg/WXsklzt8qRPd6A","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":511942},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"4123b56b43a9f82fb61a65111706c13ed063fcad","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.1.0","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.8.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/util":"^1.0.0","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.0.2_1712701518105_0.787656258790628","host":"s3://npm-registry-packages"}},"1.0.3":{"name":"@jsonjoy.com/json-pack","version":"1.0.3","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"_id":"@jsonjoy.com/json-pack@1.0.3","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"a68cbe3ccfd85d26cd763e4175fe90c9ee383d33","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.0.3.tgz","fileCount":233,"integrity":"sha512-Q0SPAdmK6s5Fe3e1kcNvwNyk6e2+CxM8XZdGbf4abZG7nUO05KSie3/iX29loTBuY+75uVP6RixDSPVpotfzmQ==","signatures":[{"sig":"MEUCIBDeeQ7ISaLaIO5xq8L404uC/NxE6+ya3CcXT10Bcz0cAiEAxTlYPgjjqoj7jP7YRnVZQv8f7drNVqw5K3uZt8fSiqA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":511942},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"04f49c6be48760ba09386fbef4464d07f11b4125","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.1.0","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.8.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/util":"^1.1.2","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.0.3_1714511535942_0.8011225696126614","host":"s3://npm-registry-packages"}},"1.0.4":{"name":"@jsonjoy.com/json-pack","version":"1.0.4","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"license":"Apache-2.0","_id":"@jsonjoy.com/json-pack@1.0.4","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"ab59c642a2e5368e8bcfd815d817143d4f3035d0","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.0.4.tgz","fileCount":234,"integrity":"sha512-aOcSN4MeAtFROysrbqG137b7gaDDSmVrl5mpo6sT/w+kcXpWnzhMjmY/Fh/sDx26NBxyIE7MB1seqLeCAzy9Sg==","signatures":[{"sig":"MEUCIQDAIFZbQJcMI0QsSKc1AAb1tjE9VcgTe9HVPU35fa7mwAIgQnChv+b59UxdMeE9a9yLdvuS3HUgeSmpn8FR6G/BCeU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":523310},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"73a1a63baa1c0975d78959986fb29f395d29ec54","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.1.0","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.8.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/util":"^1.1.2","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.0.4_1715158946486_0.6501079204761344","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"@jsonjoy.com/json-pack","version":"1.1.0","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"license":"Apache-2.0","_id":"@jsonjoy.com/json-pack@1.1.0","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"33ca57ee29d12feef540f2139225597469dec894","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.1.0.tgz","fileCount":234,"integrity":"sha512-zlQONA+msXPPwHWZMKFVS78ewFczIll5lXiVPwFPCZUsrOKdxc2AvxU1HoNBmMRhqDZUR9HkC3UOm+6pME6Xsg==","signatures":[{"sig":"MEYCIQCsFeeZO5QG1gxD4r5d0qhxR+aeq/QN21KP+u+m/ZbZ3QIhANsvXXV2AYzb5xkdOhB6fsfuuBrhaPAf9XNBFL7oy87h","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":524254},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"91c725f45e1b86fb4b6bc32496deedc82ab27103","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.5.2","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.13.1","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/util":"^1.1.2","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.1.0_1723036049650_0.35995427520697443","host":"s3://npm-registry-packages"}},"1.1.1":{"name":"@jsonjoy.com/json-pack","version":"1.1.1","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"author":{"url":"https://github.com/streamich","name":"streamich"},"license":"Apache-2.0","_id":"@jsonjoy.com/json-pack@1.1.1","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"homepage":"https://github.com/jsonjoy-com/json-pack","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"dist":{"shasum":"1f2db19ab1fd3304ccac259a1ef1dc6aff6df0ba","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.1.1.tgz","fileCount":222,"integrity":"sha512-osjeBqMJ2lb/j/M8NCPjs1ylqWIcTRTycIhVB5pt6LgzgeRSb0YRZ7j9RfA8wIUrsr/medIuhVyonXRZWLyfdw==","signatures":[{"sig":"MEUCIQCASdzl69xDD3mild9SY73YSskv2wn/oj+gAM1+i6HoewIgDUV++GyAMkAiV8cA22fYxU8SrmWaVj4QDSp0mrc0/dg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":513162},"jest":{"verbose":true,"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$","transform":{"^.+\\.ts$":"ts-jest"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"testEnvironmentOptions":{"url":"http://localhost/"},"transformIgnorePatterns":[]},"main":"lib/index.js","types":"lib/index.d.ts","engines":{"node":">=10.0"},"funding":{"url":"https://github.com/sponsors/streamich","type":"github"},"gitHead":"0db8bf8395989d52b3ae36732c374bcad5a7bbfa","scripts":{"jest":"node -r ts-node/register ./node_modules/.bin/jest","lint":"yarn tslint","test":"jest --maxWorkers 7","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","test:ci":"yarn jest --maxWorkers 3 --no-cache","typedoc":"typedoc","coverage":"yarn test --collectCoverage","prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"typings":"lib/index.d.ts","_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"prettier":{"semi":true,"useTabs":false,"tabWidth":2,"printWidth":120,"arrowParens":"always","singleQuote":true,"trailingComma":"all","bracketSpacing":false},"repository":{"url":"git+https://github.com/jsonjoy-com/json-pack.git","type":"git"},"_npmVersion":"10.8.2","description":"High-performance JSON serialization library","directories":{},"_nodeVersion":"20.18.0","dependencies":{"thingies":"^1.20.0","hyperdyperid":"^1.2.0","@jsonjoy.com/util":"^1.1.2","@jsonjoy.com/base64":"^1.1.1"},"_hasShrinkwrap":false,"devDependencies":{"bson":"^5.4.0","cbor":"^9.0.2","jest":"^29.7.0","jsbi":"^4.3.0","pako":"^2.0.4","axios":"^1.3.5","cborg":"^2.0.3","tslib":"^2.6.2","cbor-x":"^1.5.9","ion-js":"^4.3.0","rimraf":"^5.0.0","tslint":"^6.1.3","cbor-js":"^0.1.0","ts-jest":"^29.1.2","ts-node":"^10.9.2","typedoc":"^0.25.12","gh-pages":"^5.0.0","msgpack5":"^6.0.2","msgpackr":"^1.6.0","prettier":"^3.2.5","base64-js":"^1.5.1","benchmark":"^2.1.4","cbor-sync":"^1.0.4","js-base64":"^3.7.2","tinybench":"^2.4.0","ts-loader":"^9.5.1","typescript":"^5.3.3","@types/jest":"^29.5.12","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","@redis/client":"^1.5.12","app-root-path":"^3.1.0","json-pack-napi":"^0.0.2","@msgpack/msgpack":"^3.0.0-beta2","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","secure-json-parse":"^2.4.0","fast-safe-stringify":"^2.1.1","tslint-config-common":"^1.6.2","fast-stable-stringify":"^1.0.0","safe-stable-stringify":"^2.3.1","fastest-stable-stringify":"^2.0.2"},"peerDependencies":{"tslib":"2"},"_npmOperationalInternal":{"tmp":"tmp/json-pack_1.1.1_1733679641243_0.3857397940506371","host":"s3://npm-registry-packages"}},"1.2.0":{"name":"@jsonjoy.com/json-pack","version":"1.2.0","description":"High-performance JSON serialization library","author":{"name":"streamich","url":"https://github.com/streamich"},"homepage":"https://github.com/jsonjoy-com/json-pack","repository":{"type":"git","url":"git+https://github.com/jsonjoy-com/json-pack.git"},"license":"Apache-2.0","funding":{"type":"github","url":"https://github.com/sponsors/streamich"},"keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"engines":{"node":">=10.0"},"main":"lib/index.js","types":"lib/index.d.ts","typings":"lib/index.d.ts","scripts":{"prettier":"prettier --ignore-path .gitignore --write \"src/**/*.{ts,tsx,js,jsx}\"","prettier:check":"prettier --ignore-path .gitignore --list-different 'src/**/*.{ts,tsx,js,jsx}'","lint":"yarn tslint","tslint":"tslint 'src/**/*.{js,jsx,ts,tsx}' -t verbose --project .","clean":"rimraf lib typedocs coverage gh-pages yarn-error.log","build":"tsc --project tsconfig.build.json --module commonjs --target es2020 --outDir lib","jest":"node -r ts-node/register ./node_modules/.bin/jest","test":"jest --maxWorkers 7","test:ci":"yarn jest --maxWorkers 3 --no-cache","coverage":"yarn test --collectCoverage","typedoc":"typedoc","build:pages":"rimraf gh-pages && mkdir -p gh-pages && cp -r typedocs/* gh-pages && cp -r coverage gh-pages/coverage","deploy:pages":"gh-pages -d gh-pages","publish-coverage-and-typedocs":"yarn typedoc && yarn coverage && yarn build:pages && yarn deploy:pages"},"peerDependencies":{"tslib":"2"},"dependencies":{"@jsonjoy.com/base64":"^1.1.1","@jsonjoy.com/util":"^1.1.2","hyperdyperid":"^1.2.0","thingies":"^1.20.0"},"devDependencies":{"@msgpack/msgpack":"^3.0.0-beta2","@redis/client":"^1.5.12","@shelacek/ubjson":"^1.1.1","@types/benchmark":"^2.1.2","@types/jest":"^29.5.12","app-root-path":"^3.1.0","axios":"^1.3.5","base64-js":"^1.5.1","benchmark":"^2.1.4","bson":"^5.4.0","cbor":"^9.0.2","cbor-js":"^0.1.0","cbor-sync":"^1.0.4","cbor-x":"^1.5.9","cborg":"^2.0.3","fast-safe-stringify":"^2.1.1","fast-stable-stringify":"^1.0.0","fastest-stable-stringify":"^2.0.2","gh-pages":"^5.0.0","ion-js":"^4.3.0","jest":"^29.7.0","js-base64":"^3.7.2","jsbi":"^4.3.0","json-pack-napi":"^0.0.2","messagepack":"^1.1.12","msgpack-lite":"^0.1.26","msgpack5":"^6.0.2","msgpackr":"^1.6.0","pako":"^2.0.4","prettier":"^3.2.5","pretty-quick":"^3.1.3","redis-parser":"^3.0.0","rimraf":"^5.0.0","safe-stable-stringify":"^2.3.1","secure-json-parse":"^2.4.0","tinybench":"^2.4.0","ts-jest":"^29.1.2","ts-loader":"^9.5.1","ts-node":"^10.9.2","tslib":"^2.6.2","tslint":"^6.1.3","tslint-config-common":"^1.6.2","typedoc":"^0.25.12","typescript":"^5.3.3"},"jest":{"verbose":true,"testEnvironmentOptions":{"url":"http://localhost/"},"setupFiles":["<rootDir>/src/__tests__/setup.js"],"moduleFileExtensions":["ts","js"],"transform":{"^.+\\.ts$":"ts-jest"},"transformIgnorePatterns":[],"testRegex":".*/(__tests__|__jest__|demo)/.*\\.(test|spec)\\.ts$"},"prettier":{"arrowParens":"always","printWidth":120,"tabWidth":2,"useTabs":false,"semi":true,"singleQuote":true,"trailingComma":"all","bracketSpacing":false},"_id":"@jsonjoy.com/json-pack@1.2.0","gitHead":"2982051e0aa64859d00e2c2a372dfe46db673f7a","bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"_nodeVersion":"20.18.0","_npmVersion":"10.8.2","dist":{"integrity":"sha512-io1zEbbYcElht3tdlqEOFxZ0dMTYrHz9iMf0gqn1pPjZFTCgM5R4R5IMA20Chb2UPYYsxjzs8CgZ7Nb5n2K2rA==","shasum":"e658900e81d194903171c42546e1aa27f446846a","tarball":"https://registry.npmjs.org/@jsonjoy.com/json-pack/-/json-pack-1.2.0.tgz","fileCount":225,"unpackedSize":520304,"signatures":[{"keyid":"SHA256:DhQ8wR5APBvFHLF/+Tc+AYvPOdTpcIDqOhxsBHRwC7U","sig":"MEUCIQCoqSdAgHwGt8KCnNyNAyDXqPEnuG4TLVoIjTnrYZ3jAwIgK1vks3nJ7cxYZpJuUtmR9cQPzjgo6lMWUsWuE0D/nno="}]},"_npmUser":{"name":"streamich","email":"vadimsdaleckis@gmail.com"},"directories":{},"maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/json-pack_1.2.0_1741545451955_0.7235955483169556"},"_hasShrinkwrap":false}},"time":{"created":"2024-04-05T11:14:55.628Z","modified":"2025-03-09T18:37:32.335Z","0.0.1":"2024-04-05T11:14:55.876Z","1.0.0":"2024-04-09T13:19:12.691Z","1.0.1":"2024-04-09T14:26:44.596Z","1.0.2":"2024-04-09T22:25:18.427Z","1.0.3":"2024-04-30T21:12:16.144Z","1.0.4":"2024-05-08T09:02:26.841Z","1.1.0":"2024-08-07T13:07:29.842Z","1.1.1":"2024-12-08T17:40:41.405Z","1.2.0":"2025-03-09T18:37:32.117Z"},"bugs":{"url":"https://github.com/jsonjoy-com/json-pack/issues"},"author":{"name":"streamich","url":"https://github.com/streamich"},"license":"Apache-2.0","homepage":"https://github.com/jsonjoy-com/json-pack","keywords":["json","cbor","dag-json","dag-cbor","pack","msgpack","MessagePack","json-pack","ubjson","bencode","ion","amazon-ion","bson","resp","resp3","redis","resp-3","resp2"],"repository":{"type":"git","url":"git+https://github.com/jsonjoy-com/json-pack.git"},"description":"High-performance JSON serialization library","maintainers":[{"name":"json-joy-team","email":"team@jsonjoy.com"},{"name":"streamich","email":"vadimsdaleckis@gmail.com"}],"readme":"# json-pack\n\nHigh performance JSON serialization and deserialization library for JavaScript, Node.js, browser.\n\n`json-pack` contains implementations of various JSON codecs into binary,\nformats, such as MessagePack, CBOR and other formats.\n\n- [__MessagePack__](./src/msgpack/README.md)\n- [__CBOR__](./src/cbor/README.md)\n- DAG-CBOR\n- JSON\n- DAG-JSON\n- UBJSON\n- Amazon Ion\n- RESP3\n- Bencode\n\n\n## Benchmarks\n\nEncoding:\n\n```\nnpx ts-node benchmarks/json-pack/bench.encoding.ts \n=============================================================================== Benchmark: Encoding\nWarmup: 1000x , Node.js: v20.0.0 , Arch: arm64 , CPU: Apple M1\n---------------------------------------------------------------------------- Small object, 44 bytes\n🤞 json-pack JsonEncoder x 5,385,617 ops/sec ±0.53% (100 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 2,254,954 ops/sec ±0.83% (97 runs sampled)\n🤞 json-pack CborEncoderFast x 5,953,159 ops/sec ±1.12% (92 runs sampled)\n🤞 json-pack CborEncoder x 6,248,036 ops/sec ±0.29% (98 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 3,121,940 ops/sec ±0.16% (99 runs sampled)\n🤞 JSON.stringify() x 3,866,116 ops/sec ±0.11% (101 runs sampled)\n🤞 @msgpack/msgpack x 1,406,546 ops/sec ±0.94% (93 runs sampled)\n🤞 msgpackr x 2,404,916 ops/sec ±3.22% (86 runs sampled)\n🤞 cbor-x x 4,737,433 ops/sec ±1.00% (97 runs sampled)\n🤞 msgpack-lite x 987,201 ops/sec ±2.84% (91 runs sampled)\n🤞 msgpack5 x 197,867 ops/sec ±3.65% (84 runs sampled)\n🤞 messagepack x 171,865 ops/sec ±4.44% (74 runs sampled)\nFastest is 🤞 json-pack CborEncoder\n------------------------------------------------------------------------- Typical object, 993 bytes\n🤞 json-pack JsonEncoder x 299,970 ops/sec ±0.30% (97 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 211,651 ops/sec ±0.18% (100 runs sampled)\n🤞 json-pack CborEncoderFast x 429,535 ops/sec ±3.38% (93 runs sampled)\n🤞 json-pack CborEncoder x 428,848 ops/sec ±0.71% (97 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 322,982 ops/sec ±0.67% (97 runs sampled)\n🤞 JSON.stringify() x 306,828 ops/sec ±1.94% (90 runs sampled)\n🤞 @msgpack/msgpack x 199,937 ops/sec ±5.52% (93 runs sampled)\n🤞 msgpackr x 317,457 ops/sec ±2.18% (90 runs sampled)\n🤞 cbor-x x 401,854 ops/sec ±3.20% (92 runs sampled)\n🤞 msgpack-lite x 135,110 ops/sec ±1.29% (94 runs sampled)\n🤞 msgpack5 x 15,217 ops/sec ±3.72% (85 runs sampled)\n🤞 messagepack x 13,853 ops/sec ±4.73% (71 runs sampled)\nFastest is 🤞 json-pack CborEncoder\n-------------------------------------------------------------------------- Large object, 3741 bytes\n🤞 json-pack JsonEncoder x 87,312 ops/sec ±1.10% (96 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 64,718 ops/sec ±0.45% (96 runs sampled)\n🤞 json-pack CborEncoderFast x 134,615 ops/sec ±0.19% (97 runs sampled)\n🤞 json-pack CborEncoder x 128,975 ops/sec ±0.20% (98 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 103,325 ops/sec ±1.62% (98 runs sampled)\n🤞 JSON.stringify() x 101,067 ops/sec ±1.36% (95 runs sampled)\n🤞 @msgpack/msgpack x 61,715 ops/sec ±0.22% (98 runs sampled)\n🤞 msgpackr x 95,175 ops/sec ±3.84% (95 runs sampled)\n🤞 cbor-x x 111,658 ops/sec ±1.34% (95 runs sampled)\n🤞 msgpack-lite x 41,364 ops/sec ±0.28% (100 runs sampled)\n🤞 msgpack5 x 3,262 ops/sec ±4.32% (71 runs sampled)\n🤞 messagepack x 4,167 ops/sec ±7.29% (65 runs sampled)\nFastest is 🤞 json-pack CborEncoderFast\n-------------------------------------------------------------------- Very large object, 45750 bytes\n🤞 json-pack JsonEncoder x 5,687 ops/sec ±1.92% (94 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 5,813 ops/sec ±2.51% (97 runs sampled)\n🤞 json-pack CborEncoderFast x 5,749 ops/sec ±0.67% (98 runs sampled)\n🤞 json-pack CborEncoder x 5,515 ops/sec ±0.70% (98 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 5,027 ops/sec ±0.19% (100 runs sampled)\n🤞 JSON.stringify() x 7,687 ops/sec ±0.87% (99 runs sampled)\n🤞 @msgpack/msgpack x 3,379 ops/sec ±2.20% (97 runs sampled)\n🤞 msgpackr x 5,929 ops/sec ±15.26% (96 runs sampled)\n🤞 cbor-x x 5,032 ops/sec ±5.17% (90 runs sampled)\n🤞 msgpack-lite x 2,173 ops/sec ±1.17% (97 runs sampled)\n🤞 msgpack5 x 179 ops/sec ±2.95% (68 runs sampled)\n🤞 messagepack x 167 ops/sec ±1.09% (79 runs sampled)\nFastest is 🤞 JSON.stringify()\n------------------------------------------------------------------ Object with many keys, 969 bytes\n🤞 json-pack JsonEncoder x 213,447 ops/sec ±3.31% (95 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 168,303 ops/sec ±2.13% (95 runs sampled)\n🤞 json-pack CborEncoderFast x 275,511 ops/sec ±0.40% (95 runs sampled)\n🤞 json-pack CborEncoder x 270,949 ops/sec ±0.32% (97 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 210,525 ops/sec ±0.66% (99 runs sampled)\n🤞 JSON.stringify() x 200,767 ops/sec ±0.19% (101 runs sampled)\n🤞 @msgpack/msgpack x 163,665 ops/sec ±0.81% (98 runs sampled)\n🤞 msgpackr x 151,889 ops/sec ±0.27% (96 runs sampled)\n🤞 cbor-x x 191,010 ops/sec ±0.44% (96 runs sampled)\n🤞 msgpack-lite x 93,537 ops/sec ±0.68% (99 runs sampled)\n🤞 msgpack5 x 28,581 ops/sec ±1.74% (93 runs sampled)\n🤞 messagepack x 8,330 ops/sec ±5.00% (61 runs sampled)\nFastest is 🤞 json-pack CborEncoderFast\n------------------------------------------------------------------------- String ladder, 3398 bytes\n🤞 json-pack JsonEncoder x 147,755 ops/sec ±0.23% (97 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 128,378 ops/sec ±0.15% (96 runs sampled)\n🤞 json-pack CborEncoderFast x 298,037 ops/sec ±0.73% (98 runs sampled)\n🤞 json-pack CborEncoder x 293,608 ops/sec ±0.22% (97 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 244,864 ops/sec ±3.92% (92 runs sampled)\n🤞 JSON.stringify() x 165,819 ops/sec ±1.72% (94 runs sampled)\n🤞 @msgpack/msgpack x 79,127 ops/sec ±1.43% (93 runs sampled)\n🤞 msgpackr x 236,254 ops/sec ±1.45% (94 runs sampled)\n🤞 cbor-x x 206,835 ops/sec ±1.26% (92 runs sampled)\n🤞 msgpack-lite x 157,499 ops/sec ±0.39% (98 runs sampled)\n🤞 msgpack5 x 55,363 ops/sec ±2.75% (88 runs sampled)\n🤞 messagepack x 8,261 ops/sec ±2.97% (72 runs sampled)\nFastest is 🤞 json-pack CborEncoderFast\n-------------------------------------------------------------------------- Long strings, 7011 bytes\n🤞 json-pack JsonEncoder x 51,334 ops/sec ±0.16% (99 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 27,108 ops/sec ±4.89% (90 runs sampled)\n🤞 json-pack CborEncoderFast x 374,042 ops/sec ±6.39% (91 runs sampled)\n🤞 json-pack CborEncoder x 424,864 ops/sec ±0.35% (97 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 363,465 ops/sec ±1.91% (85 runs sampled)\n🤞 JSON.stringify() x 59,793 ops/sec ±0.14% (100 runs sampled)\n🤞 @msgpack/msgpack x 57,373 ops/sec ±0.13% (98 runs sampled)\n🤞 msgpackr x 372,751 ops/sec ±2.17% (90 runs sampled)\n🤞 cbor-x x 389,277 ops/sec ±1.60% (93 runs sampled)\n🤞 msgpack-lite x 170,279 ops/sec ±0.82% (97 runs sampled)\n🤞 msgpack5 x 83,809 ops/sec ±2.80% (83 runs sampled)\n🤞 messagepack x 20,076 ops/sec ±1.45% (87 runs sampled)\nFastest is 🤞 json-pack CborEncoder\n-------------------------------------------------------------------------- Short strings, 170 bytes\n🤞 json-pack JsonEncoder x 1,577,757 ops/sec ±0.16% (98 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 1,057,420 ops/sec ±0.38% (100 runs sampled)\n🤞 json-pack CborEncoderFast x 1,844,775 ops/sec ±0.20% (100 runs sampled)\n🤞 json-pack CborEncoder x 1,468,011 ops/sec ±0.23% (98 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 1,240,577 ops/sec ±0.19% (98 runs sampled)\n🤞 JSON.stringify() x 1,852,916 ops/sec ±0.20% (100 runs sampled)\n🤞 @msgpack/msgpack x 781,414 ops/sec ±0.42% (92 runs sampled)\n🤞 msgpackr x 1,672,474 ops/sec ±0.23% (99 runs sampled)\n🤞 cbor-x x 1,351,338 ops/sec ±0.20% (97 runs sampled)\n🤞 msgpack-lite x 416,300 ops/sec ±0.76% (96 runs sampled)\n🤞 msgpack5 x 151,657 ops/sec ±1.97% (91 runs sampled)\n🤞 messagepack x 35,124 ops/sec ±5.60% (61 runs sampled)\nFastest is 🤞 JSON.stringify()\n-------------------------------------------------------------------------------- Numbers, 136 bytes\n🤞 json-pack JsonEncoder x 1,708,133 ops/sec ±1.09% (98 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 1,135,630 ops/sec ±1.67% (95 runs sampled)\n🤞 json-pack CborEncoderFast x 2,658,037 ops/sec ±1.33% (97 runs sampled)\n🤞 json-pack CborEncoder x 3,084,914 ops/sec ±0.24% (101 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 1,620,958 ops/sec ±2.15% (94 runs sampled)\n🤞 JSON.stringify() x 1,602,303 ops/sec ±0.24% (98 runs sampled)\n🤞 @msgpack/msgpack x 997,885 ops/sec ±1.70% (97 runs sampled)\n🤞 msgpackr x 2,659,862 ops/sec ±0.51% (96 runs sampled)\n🤞 cbor-x x 3,116,954 ops/sec ±0.89% (95 runs sampled)\n🤞 msgpack-lite x 892,281 ops/sec ±2.19% (92 runs sampled)\n🤞 msgpack5 x 144,567 ops/sec ±3.06% (88 runs sampled)\n🤞 messagepack x 383,134 ops/sec ±2.95% (74 runs sampled)\nFastest is 🤞 cbor-x\n--------------------------------------------------------------------------------- Tokens, 308 bytes\n🤞 json-pack JsonEncoder x 1,370,517 ops/sec ±0.52% (98 runs sampled)\n🤞 Buffer.from(JSON.stringify()) x 1,016,856 ops/sec ±0.16% (93 runs sampled)\n🤞 json-pack CborEncoderFast x 1,347,193 ops/sec ±0.20% (96 runs sampled)\n🤞 json-pack CborEncoder x 1,353,358 ops/sec ±0.20% (101 runs sampled)\n🤞 json-pack MsgPackEncoderFast x 1,130,418 ops/sec ±0.14% (96 runs sampled)\n🤞 JSON.stringify() x 1,549,669 ops/sec ±0.49% (97 runs sampled)\n🤞 @msgpack/msgpack x 871,477 ops/sec ±0.92% (98 runs sampled)\n🤞 msgpackr x 1,716,378 ops/sec ±0.20% (99 runs sampled)\n🤞 cbor-x x 1,951,639 ops/sec ±0.16% (100 runs sampled)\n🤞 msgpack-lite x 622,495 ops/sec ±1.03% (96 runs sampled)\n🤞 msgpack5 x 81,727 ops/sec ±2.04% (91 runs sampled)\n🤞 messagepack x 609,651 ops/sec ±1.64% (89 runs sampled)\nFastest is 🤞 cbor-x\n```\n\nDecoding:\n\n```\nnode benchmarks/json-pack/bench.decoding.js\n=============================================================================== Benchmark: Decoding\nWarmup: 1000x , Node.js: v16.14.2 , Arch: arm64 , CPU: Apple M1\n-------------------------------------------------------------------- Very large object, 45750 bytes\n👍 JSON.parse() x 3,506 ops/sec ±0.19% (100 runs sampled)\n👍 sjson.parse() x 3,336 ops/sec ±0.11% (99 runs sampled)\n👍 json-pack CborDecoderBase x 4,915 ops/sec ±0.18% (100 runs sampled)\n👍 cbor-x x 4,747 ops/sec ±0.15% (100 runs sampled)\n👍 cbor x 260 ops/sec ±0.29% (90 runs sampled)\n👍 json-pack MsgPackDecoderFast x 5,506 ops/sec ±0.48% (100 runs sampled)\n👍 msgpackr x 4,729 ops/sec ±0.23% (101 runs sampled)\n👍 @msgpack/msgpack x 4,096 ops/sec ±0.25% (100 runs sampled)\n👍 msgpack5 x 920 ops/sec ±0.34% (99 runs sampled)\n👍 msgpack-lite x 1,223 ops/sec ±0.10% (100 runs sampled)\n👍 messagepack x 194 ops/sec ±1.93% (73 runs sampled)\nFastest is 👍 json-pack MsgPackDecoderFast\n-------------------------------------------------------------------------- Large object, 3741 bytes\n👍 JSON.parse() x 91,582 ops/sec ±0.30% (100 runs sampled)\n👍 sjson.parse() x 84,411 ops/sec ±0.16% (99 runs sampled)\n👍 json-pack CborDecoderBase x 94,618 ops/sec ±0.27% (97 runs sampled)\n👍 cbor-x x 108,102 ops/sec ±0.37% (101 runs sampled)\n👍 cbor x 4,845 ops/sec ±0.79% (95 runs sampled)\n👍 json-pack MsgPackDecoderFast x 102,544 ops/sec ±0.39% (99 runs sampled)\n👍 msgpackr x 111,668 ops/sec ±0.16% (101 runs sampled)\n👍 @msgpack/msgpack x 56,952 ops/sec ±0.51% (97 runs sampled)\n👍 msgpack5 x 17,420 ops/sec ±0.60% (101 runs sampled)\n👍 msgpack-lite x 20,536 ops/sec ±0.23% (98 runs sampled)\n👍 messagepack x 3,247 ops/sec ±2.30% (87 runs sampled)\nFastest is 👍 msgpackr\n------------------------------------------------------------------------- Typical object, 993 bytes\n👍 JSON.parse() x 304,670 ops/sec ±0.98% (97 runs sampled)\n👍 sjson.parse() x 283,259 ops/sec ±0.20% (98 runs sampled)\n👍 json-pack CborDecoderBase x 298,666 ops/sec ±0.19% (100 runs sampled)\n👍 cbor-x x 322,995 ops/sec ±0.71% (97 runs sampled)\n👍 cbor x 14,391 ops/sec ±0.88% (95 runs sampled)\n👍 json-pack MsgPackDecoderFast x 321,984 ops/sec ±0.23% (100 runs sampled)\n👍 msgpackr x 328,671 ops/sec ±0.31% (99 runs sampled)\n👍 @msgpack/msgpack x 198,604 ops/sec ±0.85% (96 runs sampled)\n👍 msgpack5 x 51,549 ops/sec ±0.32% (99 runs sampled)\n👍 msgpack-lite x 67,171 ops/sec ±0.19% (99 runs sampled)\n👍 messagepack x 9,464 ops/sec ±1.95% (92 runs sampled)\nFastest is 👍 msgpackr\n---------------------------------------------------------------------------- Small object, 44 bytes\n👍 JSON.parse() x 2,654,389 ops/sec ±0.28% (98 runs sampled)\n👍 sjson.parse() x 2,325,941 ops/sec ±0.21% (98 runs sampled)\n👍 json-pack CborDecoderBase x 3,357,402 ops/sec ±0.31% (99 runs sampled)\n👍 cbor-x x 4,133,737 ops/sec ±0.29% (101 runs sampled)\n👍 cbor x 112,776 ops/sec ±5.79% (88 runs sampled)\n👍 json-pack MsgPackDecoderFast x 3,359,127 ops/sec ±0.56% (98 runs sampled)\n👍 msgpackr x 3,436,592 ops/sec ±0.35% (97 runs sampled)\n👍 @msgpack/msgpack x 2,288,251 ops/sec ±0.52% (94 runs sampled)\n👍 msgpack5 x 377,061 ops/sec ±0.67% (96 runs sampled)\n👍 msgpack-lite x 872,569 ops/sec ±0.31% (100 runs sampled)\n👍 messagepack x 116,422 ops/sec ±1.84% (86 runs sampled)\nFastest is 👍 cbor-x\n------------------------------------------------------------------ Object with many keys, 969 bytes\n👍 JSON.parse() x 270,312 ops/sec ±0.57% (98 runs sampled)\n👍 sjson.parse() x 242,328 ops/sec ±3.10% (97 runs sampled)\n👍 json-pack CborDecoderBase x 81,403 ops/sec ±0.42% (96 runs sampled)\n👍 cbor-x x 93,131 ops/sec ±0.48% (99 runs sampled)\n👍 cbor x 8,760 ops/sec ±0.93% (95 runs sampled)\n👍 json-pack MsgPackDecoderFast x 84,014 ops/sec ±0.31% (96 runs sampled)\n👍 msgpackr x 91,477 ops/sec ±0.77% (90 runs sampled)\n👍 @msgpack/msgpack x 73,089 ops/sec ±0.56% (89 runs sampled)\n👍 msgpack5 x 23,468 ops/sec ±0.72% (97 runs sampled)\n👍 msgpack-lite x 34,630 ops/sec ±0.48% (100 runs sampled)\n👍 messagepack x 6,161 ops/sec ±1.77% (86 runs sampled)\nFastest is 👍 JSON.parse()\n------------------------------------------------------------------------- String ladder, 3398 bytes\n👍 JSON.parse() x 287,387 ops/sec ±0.36% (99 runs sampled)\n👍 sjson.parse() x 192,836 ops/sec ±0.40% (95 runs sampled)\n👍 json-pack CborDecoderBase x 177,787 ops/sec ±0.48% (98 runs sampled)\n👍 cbor-x x 320,303 ops/sec ±0.51% (94 runs sampled)\n👍 cbor x 15,416 ops/sec ±0.61% (94 runs sampled)\n👍 json-pack MsgPackDecoderFast x 179,625 ops/sec ±0.59% (100 runs sampled)\n👍 msgpackr x 375,452 ops/sec ±0.69% (94 runs sampled)\n👍 @msgpack/msgpack x 36,544 ops/sec ±0.75% (84 runs sampled)\n👍 msgpack5 x 54,428 ops/sec ±0.46% (98 runs sampled)\n👍 msgpack-lite x 25,309 ops/sec ±0.81% (75 runs sampled)\n👍 messagepack x 10,117 ops/sec ±3.99% (82 runs sampled)\nFastest is 👍 msgpackr\n-------------------------------------------------------------------------- Long strings, 7011 bytes\n👍 JSON.parse() x 117,335 ops/sec ±3.32% (89 runs sampled)\n👍 sjson.parse() x 103,275 ops/sec ±0.64% (94 runs sampled)\n👍 json-pack CborDecoderBase x 74,140 ops/sec ±7.50% (81 runs sampled)\n👍 cbor-x x 92,753 ops/sec ±0.78% (96 runs sampled)\n👍 cbor x 24,292 ops/sec ±27.70% (75 runs sampled)\n👍 json-pack MsgPackDecoderFast x 88,124 ops/sec ±1.65% (90 runs sampled)\n👍 msgpackr x 94,352 ops/sec ±0.91% (94 runs sampled)\n👍 @msgpack/msgpack x 33,256 ops/sec ±30.68% (71 runs sampled)\n👍 msgpack5 x 68,367 ops/sec ±0.70% (95 runs sampled)\n👍 msgpack-lite x 14,764 ops/sec ±2.04% (63 runs sampled)\n👍 messagepack x 17,522 ops/sec ±28.57% (66 runs sampled)\nFastest is 👍 JSON.parse()\n-------------------------------------------------------------------------- Short strings, 170 bytes\n👍 JSON.parse() x 1,077,084 ops/sec ±6.88% (77 runs sampled)\n👍 sjson.parse() x 837,130 ops/sec ±2.70% (80 runs sampled)\n👍 json-pack CborDecoderBase x 698,901 ops/sec ±4.69% (88 runs sampled)\n👍 cbor-x x 1,182,303 ops/sec ±0.39% (94 runs sampled)\n👍 cbor x 26,810 ops/sec ±14.70% (73 runs sampled)\n👍 json-pack MsgPackDecoderFast x 742,562 ops/sec ±5.06% (88 runs sampled)\n👍 msgpackr x 1,041,143 ops/sec ±2.66% (85 runs sampled)\n👍 @msgpack/msgpack x 440,652 ops/sec ±1.38% (92 runs sampled)\n👍 msgpack5 x 133,387 ops/sec ±1.14% (96 runs sampled)\n👍 msgpack-lite x 206,844 ops/sec ±0.63% (97 runs sampled)\n👍 messagepack x 23,818 ops/sec ±2.13% (94 runs sampled)\nFastest is 👍 cbor-x,👍 JSON.parse()\n-------------------------------------------------------------------------------- Numbers, 136 bytes\n👍 JSON.parse() x 1,747,460 ops/sec ±0.61% (95 runs sampled)\n👍 sjson.parse() x 1,553,635 ops/sec ±1.04% (93 runs sampled)\n👍 json-pack CborDecoderBase x 2,289,002 ops/sec ±0.93% (87 runs sampled)\n👍 cbor-x x 3,775,727 ops/sec ±2.86% (82 runs sampled)\n👍 cbor x 77,650 ops/sec ±4.32% (83 runs sampled)\n👍 json-pack MsgPackDecoderFast x 2,287,682 ops/sec ±1.54% (80 runs sampled)\n👍 msgpackr x 3,391,489 ops/sec ±0.59% (80 runs sampled)\n👍 @msgpack/msgpack x 2,297,255 ops/sec ±1.54% (78 runs sampled)\n👍 msgpack5 x 112,373 ops/sec ±1.19% (91 runs sampled)\n👍 msgpack-lite x 1,378,387 ops/sec ±0.84% (95 runs sampled)\n👍 messagepack x 1,174,740 ops/sec ±0.97% (89 runs sampled)\nFastest is 👍 cbor-x\n--------------------------------------------------------------------------------- Tokens, 308 bytes\n👍 JSON.parse() x 1,303,300 ops/sec ±2.26% (92 runs sampled)\n👍 sjson.parse() x 1,091,921 ops/sec ±2.85% (86 runs sampled)\n👍 json-pack CborDecoderBase x 1,203,319 ops/sec ±2.12% (90 runs sampled)\n👍 cbor-x x 1,787,591 ops/sec ±2.94% (74 runs sampled)\n👍 cbor x 45,127 ops/sec ±24.11% (64 runs sampled)\n👍 json-pack MsgPackDecoderFast x 1,283,322 ops/sec ±1.93% (94 runs sampled)\n👍 msgpackr x 1,890,533 ops/sec ±2.66% (90 runs sampled)\n👍 @msgpack/msgpack x 1,364,025 ops/sec ±3.78% (67 runs sampled)\n👍 msgpack5 x 117,205 ops/sec ±2.72% (90 runs sampled)\n👍 msgpack-lite x 1,316,133 ops/sec ±0.74% (99 runs sampled)\n👍 messagepack x 733,566 ops/sec ±1.55% (87 runs sampled)\nFastest is 👍 msgpackr\n```\n\nEncoder comparison:\n\n```\nnpx ts-node benchmarks/json-pack/bench.encoders.ts\n=============================================================================== Benchmark: Encoding\nWarmup: 1000x , Node.js: v20.2.0 , Arch: arm64 , CPU: Apple M1 Max\n---------------------------------------------------------------------------- Small object, 44 bytes\n👍 CborEncoderFast x 6,319,117 ops/sec ±0.11% (101 runs sampled)\n👍 CborEncoder x 6,001,443 ops/sec ±0.15% (101 runs sampled)\n👎 MsgPackEncoderFast x 6,047,466 ops/sec ±0.20% (99 runs sampled)\n👎 MsgPackEncoder x 5,493,093 ops/sec ±0.10% (101 runs sampled)\n👎 JsonEncoder x 6,018,890 ops/sec ±0.11% (97 runs sampled)\n👎 UbjsonEncoder x 6,545,118 ops/sec ±0.10% (97 runs sampled)\n👎 IonEncoderFast x 1,032,434 ops/sec ±0.14% (99 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 2,300,069 ops/sec ±0.15% (100 runs sampled)\nFastest is 👎 UbjsonEncoder\n------------------------------------------------------------------------- Typical object, 993 bytes\n👍 CborEncoderFast x 460,125 ops/sec ±0.14% (98 runs sampled)\n👍 CborEncoder x 439,506 ops/sec ±0.18% (98 runs sampled)\n👎 MsgPackEncoderFast x 458,530 ops/sec ±0.15% (99 runs sampled)\n👎 MsgPackEncoder x 449,540 ops/sec ±0.16% (100 runs sampled)\n👎 JsonEncoder x 303,410 ops/sec ±0.12% (101 runs sampled)\n👎 UbjsonEncoder x 479,450 ops/sec ±0.13% (99 runs sampled)\n👎 IonEncoderFast x 68,000 ops/sec ±0.11% (102 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 207,747 ops/sec ±0.11% (98 runs sampled)\nFastest is 👎 UbjsonEncoder\n-------------------------------------------------------------------------- Large object, 3741 bytes\n👍 CborEncoderFast x 133,608 ops/sec ±0.15% (100 runs sampled)\n👍 CborEncoder x 128,019 ops/sec ±0.13% (97 runs sampled)\n👎 MsgPackEncoderFast x 133,863 ops/sec ±0.14% (99 runs sampled)\n👎 MsgPackEncoder x 131,521 ops/sec ±0.18% (99 runs sampled)\n👎 JsonEncoder x 93,018 ops/sec ±0.13% (98 runs sampled)\n👎 UbjsonEncoder x 140,969 ops/sec ±0.15% (101 runs sampled)\n👎 IonEncoderFast x 11,523 ops/sec ±0.15% (101 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 63,389 ops/sec ±0.13% (101 runs sampled)\nFastest is 👎 UbjsonEncoder\n-------------------------------------------------------------------- Very large object, 45750 bytes\n👍 CborEncoderFast x 5,790 ops/sec ±0.15% (100 runs sampled)\n👍 CborEncoder x 5,579 ops/sec ±0.14% (100 runs sampled)\n👎 MsgPackEncoderFast x 6,005 ops/sec ±0.13% (100 runs sampled)\n👎 MsgPackEncoder x 5,670 ops/sec ±0.18% (99 runs sampled)\n👎 JsonEncoder x 6,351 ops/sec ±0.16% (101 runs sampled)\n👎 UbjsonEncoder x 6,248 ops/sec ±0.18% (99 runs sampled)\n👎 IonEncoderFast x 1,868 ops/sec ±0.21% (98 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 7,240 ops/sec ±0.19% (99 runs sampled)\nFastest is 👎 Buffer.from(JSON.stringify())\n------------------------------------------------------------------ Object with many keys, 969 bytes\n👍 CborEncoderFast x 283,371 ops/sec ±0.18% (99 runs sampled)\n👍 CborEncoder x 268,056 ops/sec ±0.17% (96 runs sampled)\n👎 MsgPackEncoderFast x 285,224 ops/sec ±0.17% (96 runs sampled)\n👎 MsgPackEncoder x 272,416 ops/sec ±0.21% (98 runs sampled)\n👎 JsonEncoder x 234,921 ops/sec ±0.21% (98 runs sampled)\n👎 UbjsonEncoder x 292,228 ops/sec ±0.19% (95 runs sampled)\n👎 IonEncoderFast x 63,456 ops/sec ±0.14% (98 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 175,341 ops/sec ±0.86% (93 runs sampled)\nFastest is 👎 UbjsonEncoder\n------------------------------------------------------------------------- String ladder, 3398 bytes\n👍 CborEncoderFast x 280,167 ops/sec ±0.20% (100 runs sampled)\n👍 CborEncoder x 283,404 ops/sec ±0.20% (97 runs sampled)\n👎 MsgPackEncoderFast x 272,800 ops/sec ±0.18% (99 runs sampled)\n👎 MsgPackEncoder x 283,433 ops/sec ±0.23% (98 runs sampled)\n👎 JsonEncoder x 147,390 ops/sec ±0.16% (98 runs sampled)\n👎 UbjsonEncoder x 290,624 ops/sec ±0.21% (98 runs sampled)\n👎 IonEncoderFast x 25,452 ops/sec ±0.17% (101 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 145,352 ops/sec ±0.23% (99 runs sampled)\nFastest is 👎 UbjsonEncoder\n-------------------------------------------------------------------------- Long strings, 7011 bytes\n👍 CborEncoderFast x 394,386 ops/sec ±0.53% (95 runs sampled)\n👍 CborEncoder x 394,442 ops/sec ±0.49% (94 runs sampled)\n👎 MsgPackEncoderFast x 386,894 ops/sec ±0.54% (95 runs sampled)\n👎 MsgPackEncoder x 394,019 ops/sec ±0.50% (95 runs sampled)\n👎 JsonEncoder x 50,781 ops/sec ±0.13% (97 runs sampled)\n👎 UbjsonEncoder x 396,184 ops/sec ±0.57% (95 runs sampled)\n👎 IonEncoderFast x 11,799 ops/sec ±0.22% (99 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 28,742 ops/sec ±0.11% (102 runs sampled)\nFastest is 👎 UbjsonEncoder,👍 CborEncoder,👍 CborEncoderFast,👎 MsgPackEncoder\n-------------------------------------------------------------------------- Short strings, 170 bytes\n👍 CborEncoderFast x 1,816,742 ops/sec ±0.16% (100 runs sampled)\n👍 CborEncoder x 1,831,503 ops/sec ±0.22% (97 runs sampled)\n👎 MsgPackEncoderFast x 1,641,743 ops/sec ±0.17% (101 runs sampled)\n👎 MsgPackEncoder x 1,694,803 ops/sec ±0.17% (97 runs sampled)\n👎 JsonEncoder x 1,595,041 ops/sec ±0.12% (99 runs sampled)\n👎 UbjsonEncoder x 1,779,112 ops/sec ±0.24% (98 runs sampled)\n👎 IonEncoderFast x 422,031 ops/sec ±0.10% (101 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 1,001,976 ops/sec ±0.24% (98 runs sampled)\nFastest is 👍 CborEncoder\n-------------------------------------------------------------------------------- Numbers, 136 bytes\n👍 CborEncoderFast x 2,822,683 ops/sec ±0.14% (99 runs sampled)\n👍 CborEncoder x 3,111,311 ops/sec ±0.20% (97 runs sampled)\n👎 MsgPackEncoderFast x 2,918,971 ops/sec ±0.14% (100 runs sampled)\n👎 MsgPackEncoder x 2,862,193 ops/sec ±0.13% (100 runs sampled)\n👎 JsonEncoder x 1,706,584 ops/sec ±0.18% (96 runs sampled)\n👎 UbjsonEncoder x 3,238,810 ops/sec ±0.15% (97 runs sampled)\n👎 IonEncoderFast x 545,885 ops/sec ±0.16% (98 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 1,216,907 ops/sec ±0.20% (98 runs sampled)\nFastest is 👎 UbjsonEncoder\n--------------------------------------------------------------------------------- Tokens, 308 bytes\n👍 CborEncoderFast x 1,360,976 ops/sec ±0.20% (96 runs sampled)\n👍 CborEncoder x 1,367,625 ops/sec ±0.16% (101 runs sampled)\n👎 MsgPackEncoderFast x 1,753,202 ops/sec ±0.19% (99 runs sampled)\n👎 MsgPackEncoder x 1,733,298 ops/sec ±0.16% (100 runs sampled)\n👎 JsonEncoder x 1,411,382 ops/sec ±0.27% (98 runs sampled)\n👎 UbjsonEncoder x 1,734,304 ops/sec ±0.17% (101 runs sampled)\n👎 IonEncoderFast x 369,161 ops/sec ±0.21% (97 runs sampled)\n👎 Buffer.from(JSON.stringify()) x 1,092,623 ops/sec ±0.15% (101 runs sampled)\nFastest is 👎 MsgPackEncoderFast\n```\n\n\n### Shallow reading\n\n```\nnode benchmarks/json-pack/bench.shallow-read.js\n=============================================================================== Benchmark: Encoding\nWarmup: 10000x , Node.js: v16.14.2 , Arch: arm64 , CPU: Apple M1\n------------------------------------------------------------------------- Typical object, 993 bytes\n👍 JSON.parse() x 314,451 ops/sec ±0.24% (94 runs sampled)\n👍 msgpackr x 332,628 ops/sec ±0.09% (99 runs sampled)\n👍 cbor-x x 326,509 ops/sec ±0.05% (101 runs sampled)\n👍 MsgPackDecoder x 368,088 ops/sec ±0.15% (100 runs sampled)\n👍 CborDecoder x 327,286 ops/sec ±0.15% (101 runs sampled)\n👍 MsgPackDecoder.{findKey,findIndex}() x 1,815,090 ops/sec ±0.07% (99 runs sampled)\n👍 MsgPackDecoder.find() x 1,797,098 ops/sec ±0.15% (98 runs sampled)\n👍 genShallowReader()(MsgPackDecoder) x 2,085,260 ops/sec ±0.19% (99 runs sampled)\nFastest is 👍 genShallowReader()(MsgPackDecoder)\n```\n","readmeFilename":"README.md"}